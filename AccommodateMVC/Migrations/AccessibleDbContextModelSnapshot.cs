// <auto-generated />
using AccommodateMVC.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AccommodateMVC.Migrations
{
    [DbContext(typeof(AccessibleDbContext))]
    partial class AccessibleDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0");

            modelBuilder.Entity("AccommodateMVC.Models.AFeature", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("AFeatures");
                });

            modelBuilder.Entity("AccommodateMVC.Models.Business", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Businesses");
                });

            modelBuilder.Entity("AccommodateMVC.Models.BusinessAF", b =>
                {
                    b.Property<int>("AFeatureID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BusinessID")
                        .HasColumnType("INTEGER");

                    b.HasKey("AFeatureID", "BusinessID");

                    b.HasIndex("BusinessID");

                    b.ToTable("BusinessAFs");
                });

            modelBuilder.Entity("AccommodateMVC.Models.BusinessAF", b =>
                {
                    b.HasOne("AccommodateMVC.Models.AFeature", "AFeature")
                        .WithMany("BusinessAFs")
                        .HasForeignKey("AFeatureID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AccommodateMVC.Models.Business", "Business")
                        .WithMany("BusinessAFs")
                        .HasForeignKey("BusinessID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
